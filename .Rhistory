(201*290)/(99*290)
(147*84)/(63*126)
(130*125)/(60*105)
a <-c(182500,150020000, 42300000,29840000)
sum(a)
sum(a)
a <-c(18250000,150020000, 42300000,29840000)
sum(18,250,000)
sum(a)
a <-c(18250000,150020000, 42300000,29840000)
sum(a)
a/sum(a)
a <-c(18250000,150020000, 42300000,29840000)
b <- c(0, 14.1, 230.8, 1105.3)
a/sum(a)*b
sum(a/sum(a)*b)
c <- c(3, 16.5, 295.3 1009.3)
a/sum(a)*c
c <- c(3, 16.5, 295.3 ,1009.3)
a/sum(a)*c
sum(a/sum(a)*c)
38/50
(38*12)/(38*12)
(19*14)/(61*6)
(40*40)/(16*4)
(30*23)/(25*22)
?matrix
matrix1 <- matrix(c(1,1,1,1,0,1,2,3),byrow = F, nrow = 2)
matrix1
matrix1 <- matrix(c(1,1,1,1,0,1,2,3),byrow = F, nrow = 4)
matrix1
exp(-0.6813)
exp(0.8657)
0.5059588/(1+0.5059588)
?corr
cor(1,2)
?cor
cor(1:10,10:1)
set.seed(667)
Medicaid1986_copy <- Medicaid1986
data(Medicaid1986)
Medicaid1986 <- Medicaid1986%>%as_tibble(.)
library(quantreg)
library(tidyverse)
library(AER)
library(MASS)
data(Medicaid1986)
Medicaid1986 <- Medicaid1986%>%as_tibble(.)
model_sqrt <- lm(sqrt(visits) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = Medicaid1986)
summary(model_sqrt)
model_log <- lm(log(1+visits) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = Medicaid1986)
summary(model_log)
model_poisson <- glm(visits ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), family = poisson('log'), data = Medicaid1986)
summary(model_poisson)
model_nb <- glm.nb(visits ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1),link = log, data = Medicaid1986)
summary(model_nb)
set.seed(667)
Medicaid1986_copy <- Medicaid1986
true_coefs <- coef(model_sqrt)
list_matrix_coefs <- list(
sqrt_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
log_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
poisson_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
nb_model = matrix(NA, nrow = 1000, ncol = length(true_coefs))
)
for (i in 1:1000) {
Medicaid1986_copy$predicted_visit <- round(predict(model_sqrt, newdata = Medicaid1986_copy)^2)
resample_data <- Medicaid1986_copy[sample(nrow(Medicaid1986_copy), replace = TRUE), ]
### fit the model
model_sqrt <- lm(sqrt(predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = Medicaid1986_copy)
model_log <- lm(log(1+predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = Medicaid1986_copy)
model_poisson <- glm(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), family = poisson('log'), data = Medicaid1986_copy)
model_nb <- glm.nb(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1),link = log, data = Medicaid1986_copy)
list_matrix_coefs$sqrt_model[i, ] <- coef(model_sqrt)
list_matrix_coefs$log_model[i, ] <- coef(model_log)
list_matrix_coefs$poisson_model[i, ] <- coef(model_poisson)
list_matrix_coefs$nb_model[i, ] <- coef(model_nb)
}
set.seed(667)
Medicaid1986_copy <- Medicaid1986
true_coefs <- coef(model_sqrt)
list_matrix_coefs <- list(
sqrt_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
log_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
poisson_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
nb_model = matrix(NA, nrow = 1000, ncol = length(true_coefs))
)
Medicaid1986_copy$predicted_visit <- round(predict(model_sqrt, newdata = Medicaid1986_copy)^2)
for (i in 1:1000) {
resample_data <- Medicaid1986_copy[sample(nrow(Medicaid1986_copy), replace = TRUE), ]
### fit the model
model_sqrt <- lm(sqrt(predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = Medicaid1986_copy)
model_log <- lm(log(1+predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = Medicaid1986_copy)
model_poisson <- glm(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), family = poisson('log'), data = Medicaid1986_copy)
model_nb <- glm.nb(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1),link = log, data = Medicaid1986_copy)
list_matrix_coefs$sqrt_model[i, ] <- coef(model_sqrt)
list_matrix_coefs$log_model[i, ] <- coef(model_log)
list_matrix_coefs$poisson_model[i, ] <- coef(model_poisson)
list_matrix_coefs$nb_model[i, ] <- coef(model_nb)
}
list_matrix_coefs
set.seed(667)
Medicaid1986_copy <- Medicaid1986
true_coefs <- coef(model_sqrt)
list_matrix_coefs <- list(
sqrt_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
log_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
poisson_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
nb_model = matrix(NA, nrow = 1000, ncol = length(true_coefs))
)
Medicaid1986_copy$predicted_visit <- round(predict(model_sqrt, newdata = Medicaid1986_copy)^2)
for (i in 1:1000) {
resample_data <- Medicaid1986_copy[sample(nrow(Medicaid1986_copy), replace = TRUE), ]
### fit the model
model_sqrt <- lm(sqrt(predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = resample_data)
model_log <- lm(log(1+predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = resample_data)
model_poisson <- glm(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), family = poisson('log'), data = resample_data)
model_nb <- glm.nb(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1),link = log, data = resample_data)
list_matrix_coefs$sqrt_model[i, ] <- coef(model_sqrt)
list_matrix_coefs$log_model[i, ] <- coef(model_log)
list_matrix_coefs$poisson_model[i, ] <- coef(model_poisson)
list_matrix_coefs$nb_model[i, ] <- coef(model_nb)
}
resample_data
resample_data%>%view
set.seed(667)
Medicaid1986_copy <- Medicaid1986
true_coefs <- coef(model_sqrt)
list_matrix_coefs <- list(
sqrt_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
log_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
poisson_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
nb_model = matrix(NA, nrow = 1000, ncol = length(true_coefs))
)
Medicaid1986_copy$predicted_visit <- round(predict(model_sqrt, newdata = Medicaid1986_copy)^2)
Medicaid1986_copy
Medicaid1986_copy%>%view
predict(model_sqrt, newdata = Medicaid1986_copy)
model_sqrt
summary(model_sqrt)
data(Medicaid1986)
Medicaid1986 <- Medicaid1986%>%as_tibble(.)
model_sqrt <- lm(sqrt(visits) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = Medicaid1986)
summary(model_sqrt)
model_sqrt
set.seed(667)
Medicaid1986_copy <- Medicaid1986
true_coefs <- coef(model_sqrt)
list_matrix_coefs <- list(
sqrt_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
log_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
poisson_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
nb_model = matrix(NA, nrow = 1000, ncol = length(true_coefs))
)
Medicaid1986_copy$predicted_visit <- round(predict(model_sqrt, newdata = Medicaid1986_copy)^2)
for (i in 1:1000) {
resample_data <- Medicaid1986_copy[sample(nrow(Medicaid1986_copy), replace = TRUE), ]
### fit the model
model_sqrt <- lm(sqrt(predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = resample_data)
model_log <- lm(log(1+predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = resample_data)
model_poisson <- glm(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), family = poisson('log'), data = resample_data)
model_nb <- glm.nb(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1),link = log, data = resample_data)
list_matrix_coefs$sqrt_model[i, ] <- coef(model_sqrt)
list_matrix_coefs$log_model[i, ] <- coef(model_log)
list_matrix_coefs$poisson_model[i, ] <- coef(model_poisson)
list_matrix_coefs$nb_model[i, ] <- coef(model_nb)
}
set.seed(667)
Medicaid1986_copy <- Medicaid1986
true_coefs <- coef(model_sqrt)
list_matrix_coefs <- list(
sqrt_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
log_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
poisson_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
nb_model = matrix(NA, nrow = 1000, ncol = length(true_coefs))
)
Medicaid1986_copy$predicted_visit <- round(predict(model_sqrt, newdata = Medicaid1986_copy)^2)
for (i in 1:10) {
resample_data <- Medicaid1986_copy[sample(nrow(Medicaid1986_copy), replace = TRUE), ]
### fit the model
model_sqrt <- lm(sqrt(predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = resample_data)
model_log <- lm(log(1+predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = resample_data)
model_poisson <- glm(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), family = poisson('log'), data = resample_data)
model_nb <- glm.nb(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1),link = log, data = resample_data)
list_matrix_coefs$sqrt_model[i, ] <- coef(model_sqrt)
list_matrix_coefs$log_model[i, ] <- coef(model_log)
list_matrix_coefs$poisson_model[i, ] <- coef(model_poisson)
list_matrix_coefs$nb_model[i, ] <- coef(model_nb)
}
evaluate_model <- function(estimates) {
bias <- colMeans(estimates) - true_coefs
se_estimates <- apply(estimates, 2, sd)
se_true <- sqrt(diag(vcov(sqrt_model)))
coverage <- colMeans((estimates - 1.96 * se_estimates <= true_coefs) & (estimates + 1.96 * se_estimates >= true_coefs))
data.frame(Estimate = true_coefs, Bias = bias, SE_Estimated = se_estimates, SE_True = se_true, Coverage = coverage)
}
i = 1
Medicaid1986_copy%>%view
resample_data
data(Medicaid1986)
Medicaid1986 <- Medicaid1986%>%as_tibble(.)
model_sqrt <- lm(sqrt(visits) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = Medicaid1986)
summary(model_sqrt)
model_log <- lm(log(1+visits) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = Medicaid1986)
summary(model_log)
model_poisson <- glm(visits ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), family = poisson('log'), data = Medicaid1986)
summary(model_poisson)
model_nb <- glm.nb(visits ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1),link = log, data = Medicaid1986)
summary(model_nb)
set.seed(667)
Medicaid1986_copy <- Medicaid1986
true_coefs <- coef(model_sqrt)
list_matrix_coefs <- list(
sqrt_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
log_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
poisson_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
nb_model = matrix(NA, nrow = 1000, ncol = length(true_coefs))
)
Medicaid1986_copy$predicted_visit <- round(predict(model_sqrt, newdata = Medicaid1986_copy)^2)
for (i in 1:10) {
resample_data <- Medicaid1986_copy[sample(nrow(Medicaid1986_copy), replace = TRUE), ]
### fit the model
model_sqrt_iter <- lm(sqrt(predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = resample_data)
model_log_iter <- lm(log(1+predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = resample_data)
model_poisson_iter <- glm(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), family = poisson('log'), data = resample_data)
model_nb_iter <- glm.nb(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1),link = log, data = resample_data)
list_matrix_coefs$sqrt_model[i, ] <- coef(model_sqrt)
list_matrix_coefs$log_model[i, ] <- coef(model_log)
list_matrix_coefs$poisson_model[i, ] <- coef(model_poisson)
list_matrix_coefs$nb_model[i, ] <- coef(model_nb)
}
evaluate_model <- function(estimates) {
bias <- colMeans(estimates) - true_coefs
se_estimates <- apply(estimates, 2, sd)
se_true <- sqrt(diag(vcov(sqrt_model)))
coverage <- colMeans((estimates - 1.96 * se_estimates <= true_coefs) & (estimates + 1.96 * se_estimates >= true_coefs))
data.frame(Estimate = true_coefs, Bias = bias, SE_Estimated = se_estimates, SE_True = se_true, Coverage = coverage)
}
set.seed(667)
Medicaid1986_copy <- Medicaid1986
true_coefs <- coef(model_sqrt)
list_matrix_coefs <- list(
sqrt_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
log_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
poisson_model = matrix(NA, nrow = 1000, ncol = length(true_coefs)),
nb_model = matrix(NA, nrow = 1000, ncol = length(true_coefs))
)
Medicaid1986_copy$predicted_visit <- round(predict(model_sqrt, newdata = Medicaid1986_copy)^2)
for (i in 1:10) {
resample_data <- Medicaid1986_copy[sample(nrow(Medicaid1986_copy), replace = TRUE), ]
### fit the model
model_sqrt_iter <- lm(sqrt(predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = resample_data)
model_log_iter <- lm(log(1+predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = resample_data)
model_poisson_iter <- glm(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), family = poisson('log'), data = resample_data)
model_nb_iter <- glm.nb(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1),link = log, data = resample_data)
list_matrix_coefs$sqrt_model[i, ] <- coef(model_sqrt)
list_matrix_coefs$log_model[i, ] <- coef(model_log)
list_matrix_coefs$poisson_model[i, ] <- coef(model_poisson)
list_matrix_coefs$nb_model[i, ] <- coef(model_nb)
}
evaluate_model <- function(estimates) {
bias <- colMeans(estimates) - true_coefs
se_estimates <- apply(estimates, 2, sd)
se_true <- sqrt(diag(vcov(sqrt_model)))
coverage <- colMeans((estimates - 1.96 * se_estimates <= true_coefs) & (estimates + 1.96 * se_estimates >= true_coefs))
data.frame(Estimate = true_coefs, Bias = bias, SE_Estimated = se_estimates, SE_True = se_true, Coverage = coverage)
}
i
model_sqrt_iter <- lm(sqrt(predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = resample_data)
model_log_iter <- lm(log(1+predicted_visit) ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), data = resample_data)
odel_poisson_iter <- glm(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1), family = poisson('log'), data = resample_data)
model_nb_iter <- glm.nb(predicted_visit ~children+age+income+factor(gender)+factor(ethnicity)+factor(married) + (access)+(health1),link = log, data = resample_data)
model_nb_iter
Medicaid1986
hist(Medicaid1986$visits)
hist(Medicaid1986$predicted_visit)
hist(Medicaid1986_copy$predicted_visit)
Medicaid1986_copy$predicted_visit <- predict(model_nb, newdata = Medicaid1986_copy)
hist(Medicaid1986_copy$predicted_visit)
predict(model_nb, newdata = Medicaid1986_copy)
LIIA_baseline%>%ggplot(aes(x=`CSF.AB42/40.Ratio`)) +
geom_histogram( binwidth=0.005, fill="#69b3a2")
source("C:/Users/zhu-s/OneDrive/Graduate File/Course/Thesis/Code/02_bayesian_sampling.R")
### setting working directory
working_directory <-  'C:\\Users\\zhu-s\\OneDrive\\Graduate File\\Course\\Thesis'
setwd(working_directory)
library(tidyverse)
library(openxlsx)
library(mclust)
library(mixtools)
### setting working directory
working_directory <-  'C:\\Users\\zhu-s\\OneDrive\\Graduate File\\Course\\Thesis'
setwd(working_directory)
### read data
df_liia <- read.xlsx('./DataRaw/LIIA Plasma and CSF Study.xlsx')%>%as_tibble()
df_transposed <- read.csv('./DataRaw/transposed_data_240619.csv')%>%as_tibble()
### clean
df_liia$visit <- factor(substr(df_liia$`Sample.ID`, 11, 11), labels = c("baseline", "followup") )
### plot
df_liia%>%filter(visit=='baseline')%>%
ggplot( aes(x=`CSF.AB42/40.Ratio`)) +
geom_histogram( binwidth=0.005, fill="#69b3a2", color="#e9ecef", alpha=0.9)+
ggtitle('') +
theme(
plot.title = element_text(size=15)
)
### cluster
#### csf
LIIA_baseline <- filter(df_liia, visit=="baseline")
LIIA_baseline%>%ggplot(aes(x=`CSF.AB42/40.Ratio`)) +
geom_histogram( binwidth=0.005, fill="#69b3a2")
csf_40_42_ratio <- LIIA_baseline$`CSF.AB42/40.Ratio`
model_csf <- BMMmodel(csf_40_42_ratio, k = 2, initialValues = list(S0 = 0.025),
priors = list(kind = "independence"))
control_csf <- JAGScontrol(variables = c("mu", "tau", "eta", "S"),
burn.in = 3000, n.iter = 2000, seed = 10)
z_csf <- JAGSrun(csf_40_42_ratio, model = model_csf, control = control_csf)
model_csf <- BMMmodel(csf_40_42_ratio, k = 2, initialValues = list(S0 = 0),
priors = list(kind = "independence"))
control_csf <- JAGScontrol(variables = c("mu", "tau", "eta", "S"),
burn.in = 3000, n.iter = 2000, seed = 10)
z_csf <- JAGSrun(csf_40_42_ratio, model = model_csf, control = control_csf)
z_csf
?seq
x <- seq(0,0.125,length.out=1000)
x
z_csf
2.861e-04
z_csf$results
z_csf$data
summary(z_csf)
z_csf
z_csf$results
z_csf$model
z_csf$variables
z_csf$mu
component_1 <- dnorm(x,0.06159 , 0.0002861)
plot(x,component_1)
dnorm
?dnorm
component_1 <- dnorm(x,0.06159 , sqrt(0.0002861))
plot(x,component_1)
z_csf
5.852e-05
mixture_model <- 0.3221 *component_1+0.6779 *component_1
plot(x,mixture_model)
mixture_model <- 0.3221 *component_1+0.6779 *component_2
plot(x,mixture_model)
component_1
component_2
component_2 <- dnorm(x, 0.09804 , sqrt(5.852e-05))
mixture_model <- 0.3221 *component_1+0.6779 *component_2
plot(x,mixture_model)
LIIA_baseline%>%ggplot(aes(x=`CSF.AB42/40.Ratio`)) +
geom_histogram( binwidth=0.005, fill="#69b3a2")
sum(mixture_model)
mixture_model
component_1
dnorm
?dnorm
dnorm(x)
clear
clc
ls()
rm(list())
ls
ls()
ls()%>%rm
ls()
rm(list = ls())
source("C:/Users/zhushu/OneDrive/Graduate File/Course/Thesis/Code/02_bayesian_sampling.R", echo=TRUE)
source("C:/Users/zhushu/OneDrive/Graduate File/Course/Thesis/Code/02_bayesian_sampling.R", echo=TRUE)
### setting working directory
working_directory <-  'C:\\Users\\zhushu\\OneDrive\\Graduate File\\Course\\Thesis'
setwd(working_directory)
### load data
source('./Code/01_data_cleaning.R')
source("C:/Users/zhushu/OneDrive/Graduate File/Course/Thesis/Code/02_bayesian_sampling.R", echo=TRUE)
z
summary(z)
z
model <- BMMmodel(fish, k = 2, initialValues = list(S0 = 2),
priors = list(kind = "independence",
parameter = "priorsFish", hierarchical = "tau"))
control <- JAGScontrol(variables = c("mu", "tau", "eta", "S"),
burn.in = 3000, n.iter = 2000, seed = 10)
z <- JAGSrun(fish, model = model, control = control)
summary(z)
z
plot(z)
data = rmixnorm( n = n, weight = weight, mean = mean, sd = sd )
### plot
weight = c( 0.7257, 0.2743 )
mean = c( 5.385,8.191 )
sd = c( 1.765 , 3.177 )
data = rmixnorm( n = n, weight = weight, mean = mean, sd = sd )
### plot
size = 500
weight = c( 0.7257, 0.2743 )
mean = c( 5.385,8.191 )
sd = c( 1.765 , 3.177 )
data = rmixnorm( n = n, weight = weight, mean = mean, sd = sd )
### plot
n = 500
weight = c( 0.7257, 0.2743 )
mean = c( 5.385,8.191 )
sd = c( 1.765 , 3.177 )
data = rmixnorm( n = n, weight = weight, mean = mean, sd = sd )
hist( data, prob = TRUE, nclass = 30, col = "gray"
hist( data, prob = TRUE, nclass = 30, col = "gray" )
data = rmixnorm( n = n, weight = weight, mean = mean, sd = sd )
hist( data, prob = TRUE, nclass = 30, col = "gray" )
data
csf_40_42_ratio <- LIIA_baseline$`CSF.AB42/40.Ratio`
model_csf <- BMMmodel(csf_40_42_ratio, k = 2, initialValues = list(S0 = 0),
priors = list(kind = "independence"))
control_csf <- JAGScontrol(variables = c("mu", "tau", "eta", "S"),
burn.in = 3000, n.iter = 2000, seed = 10)
z_csf <- JAGSrun(csf_40_42_ratio, model = model_csf, control = control_csf)
BMMposteriori(z_csf,plot = T)
x <- seq(0,0.125,length.out=1000)
component_1 <- dnorm(x,0.06159 , sqrt(0.0002861))
component_2 <- dnorm(x, 0.09804 , sqrt(5.852e-05))
mixture_model <- 0.3221 *component_1+0.6779 *component_2
plot(x,mixture_model,lwd = 1,type = 'l')
LIIA_baseline%>%ggplot(aes(x=`CSF.AB42/40.Ratio`)) +
geom_histogram( binwidth=0.005, fill="#69b3a2",)
x
mixture_model
df_model = tibble(x = x,y = mixture_model)
LIIA_baseline%>%ggplot(aes(x=`CSF.AB42/40.Ratio`)) +
geom_histogram( binwidth=0.005, fill="#69b3a2")+
geom_line(data=df_model, aes(x=x, y=y))
z_csf
ggsave(paste(working_directory,'/images/desirable career of dentistry.png',sep = '/'),dpi = 800, width = 12, height = 6, units = "in")
ggsave(paste(working_directory,'images/desirable career of dentistry.png',sep = '/'),dpi = 800, width = 12, height = 6, units = "in")
ggsave(paste(working_directory,'Code/images/desirable career of dentistry.png',sep = '/'),dpi = 800, width = 12, height = 6, units = "in")
knitr::include_graphics('images/desirable career of dentistry.png')
z
z_csf
2.861e-04
5.852e-05
component_1
component_2
mixture_model
component_1
component_2
5.124157e+01
z_csf
mu <- c(-2.75, 2.75);
sigma <- c(1, 1);
lambda <- 0.4
set.seed(689934)
N <- 1000
z <- rbinom(N, 1, lambda) + 1;
y <- rnorm(N, mu[z], sigma[z]);
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
knitr::include_graphics('images/desirable career of dentistry.png')
knitr::include_graphics('images/desirable career of dentistry.png')
library(tidyverse)
library(openxlsx)
library(stringi)
library(ggrepel)
library(tableone)
library(gtsummary)
library(data.table)
library(ggplot2)
library(patchwork)
library(finalfit)
### setting working directory
working_directory <-  "P:\\PROJECTS\\P24006Yoon"
figure_directory <- paste(working_directory,'figures',sep = '/')
setwd(working_directory)
### read data
df_pt <- read.csv('./DataRaw/PostoperativePhysica_DATA_2024-07-01_1123.csv')%>%tibble()
df_pt
df_pt$type_of_vaginoplasty___1
df_pt$type_of_vaginoplasty___1%>%table()
df_pt$type_of_vaginoplasty___2%>%table()
source("C:/Users/zhushu/OneDrive/Graduate File/Course/Thesis/Code/02_bayesian_mixture.R", echo=TRUE)
### load data
source('./Code/01_data_cleaning.R')
### setting working directory
working_directory <-  'C:\\Users\\zhushu\\OneDrive\\Graduate File\\Course\\Thesis'
setwd(working_directory)
### load data
source('./Code/01_data_cleaning.R')
### setting working directory
working_directory <-  'C:\\Users\\zhushu\\OneDrive\\Graduate File\\Course\\Thesis'
setwd(working_directory)
### load data
source('./Code/01_data_cleaning.R')
csf_40_42_ratio <- LIIA_baseline$`CSF.AB42/40.Ratio`
model_csf <- BMMmodel(csf_40_42_ratio, k = 2, initialValues = list(S0 = 0),
priors = list(kind = "independence"))
control_csf <- JAGScontrol(variables = c("mu", "tau", "eta", "S"),
burn.in = 3000, n.iter = 2000, seed = 10)
z_csf <- JAGSrun(csf_40_42_ratio, model = model_csf, control = control_csf)
BMMposteriori(z_csf,plot = T)
z_csf <- JAGSrun(csf_40_42_ratio, model = model_csf, control = control_csf)
BMMposteriori(z_csf,plot = T)
x <- seq(0,0.125,length.out=1000)
component_1 <- dnorm(x,0.06159 , sqrt(0.0002861))
component_2 <- dnorm(x, 0.09804 , sqrt(5.852e-05))
mixture_model <- 0.3221 *component_1+0.6779 *component_2
plot(x,mixture_model,lwd = 1,type = 'l')
z_csf
2.861e-04
5.852e-05
usethis::git_sitrep()
